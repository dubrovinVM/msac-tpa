// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using msac_tpa_new.EF;

namespace msac_tpa_new.Migrations
{
    [DbContext(typeof(SportmenContext))]
    [Migration("20191202195059_roles")]
    partial class roles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("msac_tpa_new.Entities.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("ComissionId");

                    b.Property<string>("DescisionFilePath");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("OrderFilePath");

                    b.Property<int>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("ComissionId");

                    b.HasIndex("RegionId");

                    b.ToTable("Attestations");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.AttestationUserBelt", b =>
                {
                    b.Property<int>("AttestationId");

                    b.Property<int>("SportmanId");

                    b.Property<int>("BeltId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("AttestationId", "SportmanId", "BeltId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("BeltId");

                    b.HasIndex("SportmanId");

                    b.ToTable("AttestationUserBelts");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Authentication.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Authentication.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<int>("RegionId");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Belt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Belts");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Comission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Comissions");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Sportman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarFilePath");

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("RegionId");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("SportMans");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.SportmanComission", b =>
                {
                    b.Property<int>("SportmanId");

                    b.Property<int>("ComissionId");

                    b.HasKey("SportmanId", "ComissionId");

                    b.HasIndex("ComissionId");

                    b.ToTable("SportmanComissions");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Attestation", b =>
                {
                    b.HasOne("msac_tpa_new.Entities.Comission", "Comission")
                        .WithMany("Attestations")
                        .HasForeignKey("ComissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("msac_tpa_new.Entities.Region", "Region")
                        .WithMany("Attestations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("msac_tpa_new.Entities.AttestationUserBelt", b =>
                {
                    b.HasOne("msac_tpa_new.Entities.Attestation", "Attestation")
                        .WithMany("AttestationUserBelts")
                        .HasForeignKey("AttestationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("msac_tpa_new.Entities.Belt", "Belt")
                        .WithMany("AttestationUserBelts")
                        .HasForeignKey("BeltId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("msac_tpa_new.Entities.Sportman", "Sportman")
                        .WithMany("AttestationUserBelts")
                        .HasForeignKey("SportmanId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Authentication.User", b =>
                {
                    b.HasOne("msac_tpa_new.Entities.Region", "Region")
                        .WithMany("Users")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("msac_tpa_new.Entities.Authentication.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Comission", b =>
                {
                    b.HasOne("msac_tpa_new.Entities.Region", "Region")
                        .WithMany("Comissions")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("msac_tpa_new.Entities.Sportman", b =>
                {
                    b.HasOne("msac_tpa_new.Entities.Region", "Region")
                        .WithMany("Sportmans")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("msac_tpa_new.Entities.SportmanComission", b =>
                {
                    b.HasOne("msac_tpa_new.Entities.Comission", "Comission")
                        .WithMany("SportmanComissions")
                        .HasForeignKey("ComissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("msac_tpa_new.Entities.Sportman", "Sportman")
                        .WithMany("SportmanComissions")
                        .HasForeignKey("SportmanId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
